# Copyright 2015-2020 The Khronos Group Inc.
# SPDX-License-Identifier: Apache-2.0
name: Check config and build of just libktx

# The purpose of this is to smoke test building just libktx using its
# CMakeLists.txt as the top-level project. Testing of various build
# options and running of tests on the library is left to the various
# KTX-Software project workflows.

# Seems no way to avoid duplicating this on logic in each .yml file.
# See https://github.com/actions/starter-workflows/issues/245.
on:
  # Trigger the workflow on a pull request,
  pull_request:

  push:
    # And on pushes to main, which will occur when a PR is merged.
    branches:
      - main
    # Also trigger on push of release tags to any branch. Useful
    # for testing release builds before merging to main.
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'
    paths-ignore:
      - .appveyor.yml
      - .github/workflows/android.yml
      - .github/workflows/check-mkvk.yml
      - .github/workflows/check-reuse.yml
      - .github/workflows/docs.yml
      - .github/workflows/formatting.yml
      - .github/workflows/linux.yml
      - .github/workflows/macos.yml
      - .github/workflows/manual.yml
      - .github/workflows/mingw.yml
      - .github/workflows/publish-pyktx.yml
      - .github/workflows/web.yml
      - .github/workflows/windows.yml
      - .travis.yml
      - README.md
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.md
      - LICENSE.md
      - LICENSES
      - RELEASE_NOTES.md
      - REUSE.toml
      - install-gitconfig*
      - vcpkg.json
      - vcpkg-configuration.json

  # Allow manual trigger
  workflow_dispatch:
  workflow_call:

jobs:
  check-libktx-only:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    env:
      GIT_LFS_SKIP_SMUDGE: 1
      BUILD_DIR: "build"
      SOURCE_DIR: "lib"
      WERROR: ON

    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch all history to make sure tags are
        # included (used for version creation)
        fetch-depth: 0

    - name: Configure CMake build
      run: cmake -S ${{ env.SOURCE_DIR }} -B ${{ env.BUILD_DIR }} -G "Ninja Multi-Config" -DLIBKTX_WERROR=${{ env.WERROR }}
    - name: Build libktx
      run: cmake --build ${{ env.BUILD_DIR }} --config=Release

    - name: Prepare version number and architecture for artifact
      id: libktx-version
      shell: bash
      # Arch set up is to match arch to names used in releases and platforms.
      # N.B. If `>> ${{ github.env }} is used here variables are not seen in
      # following step on Windows runners. Linux and macOS have no problem.
      run: |
        echo KTX_VERSION=$(grep -A 1 -m 1 "Code version" lib/src/version.h | tail -n 1) >> $GITHUB_ENV
        arch=$(echo ${{ runner.arch }} | tr '[:upper:]' '[:lower:]')
        if [ "$arch" = "x64" ]; then arch=x86_64
        elif [ "${{ runner.os }}" = "Linux" -a "$arch" = "arm64" ]; then arch=aarch64; fi
        echo ARCH=$arch >> $GITHUB_ENV

    - name: Upload artifact libktx
      uses: actions/upload-artifact@v4
      with:
        name: libktx-${{ env.KTX_VERSION }}-${{ runner.os }}-${{ env.ARCH }}
        path: ${{env.BUILD_DIR}}/Release/*ktx*

