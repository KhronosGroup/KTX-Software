// Copyright 2020 The Khronos Group Inc.
// SPDX-License-Identifier: Apache-2.0

/*************************************** Do not edit ***************************************
                                  Automatically generated by
  https://github.com/KhronosGroup/KTX-Specification/blob/master/generate_format_switches.rb
 *******************************************************************************************/
case VK_FORMAT_R4G4B4A4_UNORM_PACK16: return GL_RGBA;
case VK_FORMAT_B4G4R4A4_UNORM_PACK16: return GL_BGRA;
case VK_FORMAT_R5G6B5_UNORM_PACK16: return GL_RGB;
case VK_FORMAT_B5G6R5_UNORM_PACK16: return GL_RGB;
case VK_FORMAT_R5G5B5A1_UNORM_PACK16: return GL_RGBA;
case VK_FORMAT_B5G5R5A1_UNORM_PACK16: return GL_BGRA;
case VK_FORMAT_A1R5G5B5_UNORM_PACK16: return GL_BGRA;
case VK_FORMAT_R8_UNORM: return GL_RED;
case VK_FORMAT_R8_SNORM: return GL_RED;
case VK_FORMAT_R8_UINT: return GL_RED_INTEGER;
case VK_FORMAT_R8_SINT: return GL_RED_INTEGER;
case VK_FORMAT_R8_SRGB: return GL_RED;
case VK_FORMAT_R8G8_UNORM: return GL_RG;
case VK_FORMAT_R8G8_SNORM: return GL_RG;
case VK_FORMAT_R8G8_UINT: return GL_RG_INTEGER;
case VK_FORMAT_R8G8_SINT: return GL_RG_INTEGER;
case VK_FORMAT_R8G8_SRGB: return GL_RG;
case VK_FORMAT_R8G8B8_UNORM: return GL_RGB;
case VK_FORMAT_R8G8B8_SNORM: return GL_RGB;
case VK_FORMAT_R8G8B8_UINT: return GL_RGB_INTEGER;
case VK_FORMAT_R8G8B8_SINT: return GL_RGB_INTEGER;
case VK_FORMAT_R8G8B8_SRGB: return GL_RGB;
case VK_FORMAT_B8G8R8_UNORM: return GL_BGR;
case VK_FORMAT_B8G8R8_SNORM: return GL_BGR;
case VK_FORMAT_B8G8R8_UINT: return GL_BGR_INTEGER;
case VK_FORMAT_B8G8R8_SINT: return GL_BGR_INTEGER;
case VK_FORMAT_B8G8R8_SRGB: return GL_BGR;
case VK_FORMAT_R8G8B8A8_UNORM: return GL_RGBA;
case VK_FORMAT_R8G8B8A8_SNORM: return GL_RGBA;
case VK_FORMAT_R8G8B8A8_UINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R8G8B8A8_SINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R8G8B8A8_SRGB: return GL_RGBA;
case VK_FORMAT_B8G8R8A8_UNORM: return GL_BGRA;
case VK_FORMAT_B8G8R8A8_SNORM: return GL_BGRA;
case VK_FORMAT_B8G8R8A8_UINT: return GL_BGRA_INTEGER;
case VK_FORMAT_B8G8R8A8_SINT: return GL_BGRA_INTEGER;
case VK_FORMAT_B8G8R8A8_SRGB: return GL_BGRA;
case VK_FORMAT_A8B8G8R8_UNORM_PACK32: return GL_RGBA;
case VK_FORMAT_A8B8G8R8_SNORM_PACK32: return GL_RGBA;
case VK_FORMAT_A8B8G8R8_UINT_PACK32: return GL_RGBA_INTEGER;
case VK_FORMAT_A8B8G8R8_SINT_PACK32: return GL_RGBA_INTEGER;
case VK_FORMAT_A8B8G8R8_SRGB_PACK32: return GL_RGBA;
case VK_FORMAT_A2R10G10B10_UNORM_PACK32: return GL_BGRA;
case VK_FORMAT_A2R10G10B10_UINT_PACK32: return GL_BGRA_INTEGER;
case VK_FORMAT_A2B10G10R10_UNORM_PACK32: return GL_RGBA;
case VK_FORMAT_A2B10G10R10_UINT_PACK32: return GL_RGBA_INTEGER;
case VK_FORMAT_R16_UNORM: return GL_RED;
case VK_FORMAT_R16_SNORM: return GL_RED;
case VK_FORMAT_R16_UINT: return GL_RED_INTEGER;
case VK_FORMAT_R16_SINT: return GL_RED_INTEGER;
case VK_FORMAT_R16_SFLOAT: return GL_RED;
case VK_FORMAT_R16G16_UNORM: return GL_RG;
case VK_FORMAT_R16G16_SNORM: return GL_RG;
case VK_FORMAT_R16G16_UINT: return GL_RG_INTEGER;
case VK_FORMAT_R16G16_SINT: return GL_RG_INTEGER;
case VK_FORMAT_R16G16_SFLOAT: return GL_RG;
case VK_FORMAT_R16G16B16_UNORM: return GL_RGB;
case VK_FORMAT_R16G16B16_SNORM: return GL_RGB;
case VK_FORMAT_R16G16B16_UINT: return GL_RGB_INTEGER;
case VK_FORMAT_R16G16B16_SINT: return GL_RGB_INTEGER;
case VK_FORMAT_R16G16B16_SFLOAT: return GL_RGB;
case VK_FORMAT_R16G16B16A16_UNORM: return GL_RGBA;
case VK_FORMAT_R16G16B16A16_SNORM: return GL_RGBA;
case VK_FORMAT_R16G16B16A16_UINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R16G16B16A16_SINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R16G16B16A16_SFLOAT: return GL_RGBA;
case VK_FORMAT_R32_UINT: return GL_RED_INTEGER;
case VK_FORMAT_R32_SINT: return GL_RED_INTEGER;
case VK_FORMAT_R32_SFLOAT: return GL_RED;
case VK_FORMAT_R32G32_UINT: return GL_RG_INTEGER;
case VK_FORMAT_R32G32_SINT: return GL_RG_INTEGER;
case VK_FORMAT_R32G32_SFLOAT: return GL_RG;
case VK_FORMAT_R32G32B32_UINT: return GL_RGB_INTEGER;
case VK_FORMAT_R32G32B32_SINT: return GL_RGB_INTEGER;
case VK_FORMAT_R32G32B32_SFLOAT: return GL_RGB;
case VK_FORMAT_R32G32B32A32_UINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R32G32B32A32_SINT: return GL_RGBA_INTEGER;
case VK_FORMAT_R32G32B32A32_SFLOAT: return GL_RGBA;
case VK_FORMAT_B10G11R11_UFLOAT_PACK32: return GL_RGB;
case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32: return GL_RGB;
case VK_FORMAT_D16_UNORM: return GL_DEPTH_COMPONENT;
case VK_FORMAT_D32_SFLOAT: return GL_DEPTH_COMPONENT;
case VK_FORMAT_S8_UINT: return GL_STENCIL_INDEX;
case VK_FORMAT_D24_UNORM_S8_UINT: return GL_DEPTH_STENCIL;
case VK_FORMAT_D32_SFLOAT_S8_UINT: return GL_DEPTH_STENCIL;
case VK_FORMAT_A4R4G4B4_UNORM_PACK16: return GL_BGRA;
case VK_FORMAT_A4B4G4R4_UNORM_PACK16: return GL_RGBA;
case VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR: return GL_RGBA;
case VK_FORMAT_A8_UNORM_KHR: return GL_ALPHA;
