// Copyright 2020 The Khronos Group Inc.
// SPDX-License-Identifier: Apache-2.0

/*************************************** Do not edit ***************************************
                                  Automatically generated by
  https://github.com/KhronosGroup/KTX-Specification/blob/master/generate_format_switches.rb
 *******************************************************************************************/
case VK_FORMAT_R4G4B4A4_UNORM_PACK16: return GL_RGBA4;
case VK_FORMAT_B4G4R4A4_UNORM_PACK16: return GL_RGBA4;
case VK_FORMAT_R5G6B5_UNORM_PACK16: return GL_RGB565;
case VK_FORMAT_B5G6R5_UNORM_PACK16: return GL_RGB565;
case VK_FORMAT_R5G5B5A1_UNORM_PACK16: return GL_RGB5_A1;
case VK_FORMAT_B5G5R5A1_UNORM_PACK16: return GL_RGB5_A1;
case VK_FORMAT_A1R5G5B5_UNORM_PACK16: return GL_RGB5_A1;
case VK_FORMAT_R8_UNORM: return GL_R8;
case VK_FORMAT_R8_SNORM: return GL_R8_SNORM;
case VK_FORMAT_R8_UINT: return GL_R8UI;
case VK_FORMAT_R8_SINT: return GL_R8I;
case VK_FORMAT_R8_SRGB: return GL_SR8_EXT;
case VK_FORMAT_R8G8_UNORM: return GL_RG8;
case VK_FORMAT_R8G8_SNORM: return GL_RG8_SNORM;
case VK_FORMAT_R8G8_UINT: return GL_RG8UI;
case VK_FORMAT_R8G8_SINT: return GL_RG8I;
case VK_FORMAT_R8G8_SRGB: return GL_SRG8_EXT;
case VK_FORMAT_R8G8B8_UNORM: return GL_RGB8;
case VK_FORMAT_R8G8B8_SNORM: return GL_RGB8_SNORM;
case VK_FORMAT_R8G8B8_UINT: return GL_RGB8UI;
case VK_FORMAT_R8G8B8_SINT: return GL_RGB8I;
case VK_FORMAT_R8G8B8_SRGB: return GL_SRGB8;
case VK_FORMAT_B8G8R8_UNORM: return GL_RGB8;
case VK_FORMAT_B8G8R8_SNORM: return GL_RGB8_SNORM;
case VK_FORMAT_B8G8R8_UINT: return GL_RGB8UI;
case VK_FORMAT_B8G8R8_SINT: return GL_RGB8I;
case VK_FORMAT_B8G8R8_SRGB: return GL_SRGB8;
case VK_FORMAT_R8G8B8A8_UNORM: return GL_RGBA8;
case VK_FORMAT_R8G8B8A8_SNORM: return GL_RGBA8_SNORM;
case VK_FORMAT_R8G8B8A8_UINT: return GL_RGBA8UI;
case VK_FORMAT_R8G8B8A8_SINT: return GL_RGBA8I;
case VK_FORMAT_R8G8B8A8_SRGB: return GL_SRGB8_ALPHA8;
case VK_FORMAT_B8G8R8A8_UNORM: return GL_RGBA8;
case VK_FORMAT_B8G8R8A8_SNORM: return GL_RGBA8_SNORM;
case VK_FORMAT_B8G8R8A8_UINT: return GL_RGBA8UI;
case VK_FORMAT_B8G8R8A8_SINT: return GL_RGBA8I;
case VK_FORMAT_B8G8R8A8_SRGB: return GL_SRGB8_ALPHA8;
case VK_FORMAT_A8B8G8R8_UNORM_PACK32: return GL_RGBA8;
case VK_FORMAT_A8B8G8R8_SNORM_PACK32: return GL_RGBA8_SNORM;
case VK_FORMAT_A8B8G8R8_UINT_PACK32: return GL_RGBA8UI;
case VK_FORMAT_A8B8G8R8_SINT_PACK32: return GL_RGBA8I;
case VK_FORMAT_A8B8G8R8_SRGB_PACK32: return GL_SRGB8_ALPHA8;
case VK_FORMAT_A2R10G10B10_UNORM_PACK32: return GL_RGB10_A2;
case VK_FORMAT_A2R10G10B10_UINT_PACK32: return GL_RGB10_A2UI;
case VK_FORMAT_A2B10G10R10_UNORM_PACK32: return GL_RGB10_A2;
case VK_FORMAT_A2B10G10R10_UINT_PACK32: return GL_RGB10_A2UI;
case VK_FORMAT_R16_UNORM: return GL_R16;
case VK_FORMAT_R16_SNORM: return GL_R16_SNORM;
case VK_FORMAT_R16_UINT: return GL_R16UI;
case VK_FORMAT_R16_SINT: return GL_R16I;
case VK_FORMAT_R16_SFLOAT: return GL_R16F;
case VK_FORMAT_R16G16_UNORM: return GL_RG16;
case VK_FORMAT_R16G16_SNORM: return GL_RG16_SNORM;
case VK_FORMAT_R16G16_UINT: return GL_RG16UI;
case VK_FORMAT_R16G16_SINT: return GL_RG16I;
case VK_FORMAT_R16G16_SFLOAT: return GL_RG16F;
case VK_FORMAT_R16G16B16_UNORM: return GL_RGB16;
case VK_FORMAT_R16G16B16_SNORM: return GL_RGB16_SNORM;
case VK_FORMAT_R16G16B16_UINT: return GL_RGB16UI;
case VK_FORMAT_R16G16B16_SINT: return GL_RGB16I;
case VK_FORMAT_R16G16B16_SFLOAT: return GL_RGB16F;
case VK_FORMAT_R16G16B16A16_UNORM: return GL_RGBA16;
case VK_FORMAT_R16G16B16A16_SNORM: return GL_RGBA16_SNORM;
case VK_FORMAT_R16G16B16A16_UINT: return GL_RGBA16UI;
case VK_FORMAT_R16G16B16A16_SINT: return GL_RGBA16I;
case VK_FORMAT_R16G16B16A16_SFLOAT: return GL_RGBA16F;
case VK_FORMAT_R32_UINT: return GL_R32UI;
case VK_FORMAT_R32_SINT: return GL_R32I;
case VK_FORMAT_R32_SFLOAT: return GL_R32F;
case VK_FORMAT_R32G32_UINT: return GL_RG32UI;
case VK_FORMAT_R32G32_SINT: return GL_RG32I;
case VK_FORMAT_R32G32_SFLOAT: return GL_RG32F;
case VK_FORMAT_R32G32B32_UINT: return GL_RGB32UI;
case VK_FORMAT_R32G32B32_SINT: return GL_RGB32I;
case VK_FORMAT_R32G32B32_SFLOAT: return GL_RGB32F;
case VK_FORMAT_R32G32B32A32_UINT: return GL_RGBA32UI;
case VK_FORMAT_R32G32B32A32_SINT: return GL_RGBA32I;
case VK_FORMAT_R32G32B32A32_SFLOAT: return GL_RGBA32F;
case VK_FORMAT_B10G11R11_UFLOAT_PACK32: return GL_R11F_G11F_B10F;
case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32: return GL_RGB9_E5;
case VK_FORMAT_D16_UNORM: return GL_DEPTH_COMPONENT16;
case VK_FORMAT_D32_SFLOAT: return GL_DEPTH_COMPONENT32F;
case VK_FORMAT_S8_UINT: return GL_STENCIL_INDEX8;
case VK_FORMAT_D24_UNORM_S8_UINT: return GL_DEPTH24_STENCIL8;
case VK_FORMAT_D32_SFLOAT_S8_UINT: return GL_DEPTH32F_STENCIL8;
case VK_FORMAT_BC1_RGB_UNORM_BLOCK: return GL_COMPRESSED_RGB_S3TC_DXT1_EXT;
case VK_FORMAT_BC1_RGB_SRGB_BLOCK: return GL_COMPRESSED_SRGB_S3TC_DXT1_EXT;
case VK_FORMAT_BC1_RGBA_UNORM_BLOCK: return GL_COMPRESSED_RGBA_S3TC_DXT1_EXT;
case VK_FORMAT_BC1_RGBA_SRGB_BLOCK: return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
case VK_FORMAT_BC2_UNORM_BLOCK: return GL_COMPRESSED_RGBA_S3TC_DXT3_EXT;
case VK_FORMAT_BC2_SRGB_BLOCK: return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
case VK_FORMAT_BC3_UNORM_BLOCK: return GL_COMPRESSED_RGBA_S3TC_DXT5_EXT;
case VK_FORMAT_BC3_SRGB_BLOCK: return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
case VK_FORMAT_BC4_UNORM_BLOCK: return GL_COMPRESSED_RED_RGTC1;
case VK_FORMAT_BC4_SNORM_BLOCK: return GL_COMPRESSED_SIGNED_RED_RGTC1;
case VK_FORMAT_BC5_UNORM_BLOCK: return GL_COMPRESSED_RG_RGTC2;
case VK_FORMAT_BC5_SNORM_BLOCK: return GL_COMPRESSED_SIGNED_RG_RGTC2;
case VK_FORMAT_BC6H_UFLOAT_BLOCK: return GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT;
case VK_FORMAT_BC6H_SFLOAT_BLOCK: return GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT;
case VK_FORMAT_BC7_UNORM_BLOCK: return GL_COMPRESSED_RGBA_BPTC_UNORM;
case VK_FORMAT_BC7_SRGB_BLOCK: return GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM;
case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK: return GL_COMPRESSED_RGB8_ETC2;
case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ETC2;
case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK: return GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;
case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;
case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK: return GL_COMPRESSED_RGBA8_ETC2_EAC;
case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;
case VK_FORMAT_EAC_R11_UNORM_BLOCK: return GL_COMPRESSED_R11_EAC;
case VK_FORMAT_EAC_R11_SNORM_BLOCK: return GL_COMPRESSED_SIGNED_R11_EAC;
case VK_FORMAT_EAC_R11G11_UNORM_BLOCK: return GL_COMPRESSED_RG11_EAC;
case VK_FORMAT_EAC_R11G11_SNORM_BLOCK: return GL_COMPRESSED_SIGNED_RG11_EAC;
case VK_FORMAT_ASTC_4x4_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_4x4_KHR;
case VK_FORMAT_ASTC_4x4_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;
case VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_4x4_KHR;
case VK_FORMAT_ASTC_5x4_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_5x4_KHR;
case VK_FORMAT_ASTC_5x4_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;
case VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_5x4_KHR;
case VK_FORMAT_ASTC_5x5_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_5x5_KHR;
case VK_FORMAT_ASTC_5x5_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;
case VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_5x5_KHR;
case VK_FORMAT_ASTC_6x5_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_6x5_KHR;
case VK_FORMAT_ASTC_6x5_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;
case VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_6x5_KHR;
case VK_FORMAT_ASTC_6x6_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_6x6_KHR;
case VK_FORMAT_ASTC_6x6_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;
case VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_6x6_KHR;
case VK_FORMAT_ASTC_8x5_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x5_KHR;
case VK_FORMAT_ASTC_8x5_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;
case VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x5_KHR;
case VK_FORMAT_ASTC_8x6_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x6_KHR;
case VK_FORMAT_ASTC_8x6_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;
case VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x6_KHR;
case VK_FORMAT_ASTC_8x8_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x8_KHR;
case VK_FORMAT_ASTC_8x8_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;
case VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_8x8_KHR;
case VK_FORMAT_ASTC_10x5_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x5_KHR;
case VK_FORMAT_ASTC_10x5_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;
case VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x5_KHR;
case VK_FORMAT_ASTC_10x6_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x6_KHR;
case VK_FORMAT_ASTC_10x6_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;
case VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x6_KHR;
case VK_FORMAT_ASTC_10x8_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x8_KHR;
case VK_FORMAT_ASTC_10x8_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;
case VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x8_KHR;
case VK_FORMAT_ASTC_10x10_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x10_KHR;
case VK_FORMAT_ASTC_10x10_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;
case VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_10x10_KHR;
case VK_FORMAT_ASTC_12x10_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_12x10_KHR;
case VK_FORMAT_ASTC_12x10_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;
case VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_12x10_KHR;
case VK_FORMAT_ASTC_12x12_UNORM_BLOCK: return GL_COMPRESSED_RGBA_ASTC_12x12_KHR;
case VK_FORMAT_ASTC_12x12_SRGB_BLOCK: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;
case VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK: return GL_COMPRESSED_RGBA_ASTC_12x12_KHR;
case VK_FORMAT_ASTC_3x3x3_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_3x3x3_OES;
case VK_FORMAT_ASTC_3x3x3_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES;
case VK_FORMAT_ASTC_3x3x3_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_3x3x3_OES;
case VK_FORMAT_ASTC_4x3x3_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x3x3_OES;
case VK_FORMAT_ASTC_4x3x3_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES;
case VK_FORMAT_ASTC_4x3x3_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x3x3_OES;
case VK_FORMAT_ASTC_4x4x3_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x4x3_OES;
case VK_FORMAT_ASTC_4x4x3_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES;
case VK_FORMAT_ASTC_4x4x3_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x4x3_OES;
case VK_FORMAT_ASTC_4x4x4_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x4x4_OES;
case VK_FORMAT_ASTC_4x4x4_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES;
case VK_FORMAT_ASTC_4x4x4_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_4x4x4_OES;
case VK_FORMAT_ASTC_5x4x4_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x4x4_OES;
case VK_FORMAT_ASTC_5x4x4_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES;
case VK_FORMAT_ASTC_5x4x4_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x4x4_OES;
case VK_FORMAT_ASTC_5x5x4_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x5x4_OES;
case VK_FORMAT_ASTC_5x5x4_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES;
case VK_FORMAT_ASTC_5x5x4_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x5x4_OES;
case VK_FORMAT_ASTC_5x5x5_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x5x5_OES;
case VK_FORMAT_ASTC_5x5x5_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES;
case VK_FORMAT_ASTC_5x5x5_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_5x5x5_OES;
case VK_FORMAT_ASTC_6x5x5_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x5x5_OES;
case VK_FORMAT_ASTC_6x5x5_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES;
case VK_FORMAT_ASTC_6x5x5_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x5x5_OES;
case VK_FORMAT_ASTC_6x6x5_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x6x5_OES;
case VK_FORMAT_ASTC_6x6x5_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES;
case VK_FORMAT_ASTC_6x6x5_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x6x5_OES;
case VK_FORMAT_ASTC_6x6x6_UNORM_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x6x6_OES;
case VK_FORMAT_ASTC_6x6x6_SRGB_BLOCK_EXT: return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES;
case VK_FORMAT_ASTC_6x6x6_SFLOAT_BLOCK_EXT: return GL_COMPRESSED_RGBA_ASTC_6x6x6_OES;
case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG: return GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG: return GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG: return GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG;
case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG: return GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG;
case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG: return GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT;
case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG: return GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT;
case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG: return GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG;
case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG: return GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG;
case VK_FORMAT_A4R4G4B4_UNORM_PACK16: return GL_RGBA4;
case VK_FORMAT_A4B4G4R4_UNORM_PACK16: return GL_RGBA4;
case VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR: return GL_RGB5_A1;
case VK_FORMAT_A8_UNORM_KHR: return GL_ALPHA8_EXT;
