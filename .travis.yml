# CI build script for Travis.
# See https://docs.travis-ci.com/user/multi-os/ for more info.

matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-7
            - g++-7
      dist: xenial
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - VULKAN_SDK_VER="1.1.85"
      sudo: required
    - os: osx
      env:
        - ASSIMP_HOME="/usr/local"
        - VULKAN_SDK_VER="1.1.85.0"
        - VULKAN_SDK="$HOME/build/vulkansdk-macos-$VULKAN_SDK_VER"
      osx_image: xcode9.3

language:
  - cpp

compiler:
  # clang compilation will be tested by xcode.
  #- clang
  - gcc

#env:
  #global:

# Phase 1: Git clone - done automatically.
# Phase 2: Install apt addons.
# Phase 3: Install cache components - Currently not using a cache
# then the following phases:
before_install:
- eval "${MATRIX_EVAL}"
- echo -e "machine github.com\n  login $GITHUB_TOKEN" >> ~/.netrc # Prevent rate limiting on Git LFS.
- cat ~/.netrc

install:
- |
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    # No need to install git-lfs. It is part of Travis's Xenial environment.
    sudo apt-get -qq update &&
    sudo apt-get -qq install doxygen &&
    sudo apt-get -qq install libgl1-mesa-glx libgl1-mesa-dev &&
    sudo apt-get -qq install libvulkan1 libvulkan-dev &&
    sudo apt-get -qq install libassimp3v5 libassimp-dev &&
    wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add - &&
    sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-$VULKAN_SDK_VER-xenial.list http://packages.lunarg.com/vulkan/$VULKAN_SDK_VER/lunarg-vulkan-$VULKAN_SDK_VER-xenial.list &&
    sudo apt update &&
    sudo apt install lunarg-vulkan-sdk
    ;;
  osx)
    brew update > /dev/null &&
    brew install git-lfs &&
    git lfs install &&
    git lfs version &&
    brew install doxygen &&
    brew install assimp &&
    # Current directory is .../build/{KhronosGroup,msc-}/KTX-Software. cd to 'build'.
    pushd ../.. &&
    wget -O vulkansdk-macos-$VULKAN_SDK_VER.tar.gz https://sdk.lunarg.com/sdk/download/$VULKAN_SDK_VER/mac/vulkansdk-macos-$VULKAN_SDK_VER.tar.gz?Human=true &&
    tar -xzf vulkansdk-macos-$VULKAN_SDK_VER.tar.gz &&
    popd
    ;;
  esac
- pushd ../..
- git clone https://github.com/msc-/gyp
- cd gyp && sudo ./setup.py install && cd ..
- popd

before_script:
  - |
    # Pull just the linux or mac/ios files to save time. git clone
    # was done before any code we control so before we could install
    # git-lfs. Therefore we have to pull the files stored in git LFS.
    case "${TRAVIS_OS_NAME:-linux}" in
    linux)
      ;;
    osx)
      git lfs pull --include=other_lib/mac,other_lib/ios | cat &&
      sudo cp -r other_lib/mac/Release/SDL2.framework /Library/Frameworks
      ;;
    esac
  # Make sure embedded dates are correct.
  - ./install-gitconfig.sh
  - rm TODO.md lib/mainpage.md pkgdoc/mainpage.md tools/toktx/toktx.cpp
  - git checkout TODO.md lib/mainpage.md pkgdoc/mainpage.md tools/toktx/toktx.cpp

script:
- |
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    # Due to a gyp bug in the generation of dependencies for the .frag & .vert shader files
    # make fails in building the load tests.
    #cd build/make/linux &&
    #make BUILDTYPE=Debug &&
    #make BUILDTYPE=Release &&
    #cd ../../cmake/linux/Debug &&
    pushd build/cmake/linux/Debug &&
    cmake . && make &&
    cd ../Release &&
    cmake . && make &&
    popd &&
    pushd build/cmake/linux/Debug &&
    ./unittests &&
    ./texturetests &&
    cd ../Release &&
    ./unittests &&
    ./texturetests &&
    popd &&
    ./runDoxygen ktxpkg.doxy
    ;;
  osx)
    # Due to the spaces in the platform names, must use array variables so
    # destination args can be expanded to a single word.
    OSX_XCODE_OPTIONS=(-alltargets -destination "platform=OS X,arch=x86_64")
    IOS_XCODE_OPTIONS=(-alltargets -destination "generic/platform=iOS" -destination "platform=iOS Simulator,OS=latest")
    XCODE_CODESIGN_ENV='CODE_SIGN_IDENTITY= CODE_SIGNING_REQUIRED=NO'
    # The following and more is needed if you want to actually sign the code.
    # See http://stackoverflow.com/questions/27671854/travis-ci-fails-to-build-with-a-code-signing-error.
    #KEY_CHAIN=xcode-build.keychain
    #security create-keychain -p travis $KEY_CHAIN
    # Make the keychain the default so identities are found
    #security default-keychain -s $KEY_CHAIN
    ## Unlock the keychain
    #security unlock-keychain -p travis $KEY_CHAIN
    ## Set keychain locking timeout to 3600 seconds
    #security set-keychain-settings -t 3600 -u $KEY_CHAIN
    pushd build/xcode/mac &&
    xcodebuild -project ktxtests.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV &&
    xcodebuild -project ktxtests.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV &&
    xcodebuild -project ktxtools.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV &&
    xcodebuild -project ktxtools.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV &&
    xcodebuild -project ktxdoc.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV &&
    cd ../ios &&
    xcodebuild -project ktxtests.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Debug ONLY_ACTIVE_ARCH=NO $XCODE_CODESIGN_ENV &&
    xcodebuild -project ktxtests.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV &&
    popd &&
    pushd build/Debug &&
    ./unittests &&
    ./texturetests &&
    cd ../Release &&
    ./unittests &&
    ./texturetests &&
    popd
    ;;
    esac

# Errors in something run in after_success: don't cause the build to fail so don't use. 

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  local-dir: build/docs/html
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = osx
    #tags: true

# vim:ai:ts=4:sts=2:sw=2:expandtab
